{
	"id": "5cc64f1f624b9d32fd4a4d1263416861",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"interfaces/IworldID.sol": {
				"content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\ninterface IWorldID {\n    /// @notice Reverts if the zero-knowledge proof is invalid.\n    /// @param root The of the Merkle tree\n    /// @param groupId The id of the Semaphore group\n    /// @param signalHash A keccak256 hash of the Semaphore signal\n    /// @param nullifierHash The nullifier hash\n    /// @param externalNullifierHash A keccak256 hash of the external nullifier\n    /// @param proof The zero-knowledge proof\n    /// @dev  Note that a double-signaling check is not included here, and should be carried by the caller.\n    function verifyProof(\n        uint256 root,\n        uint256 groupId,\n        uint256 signalHash,\n        uint256 nullifierHash,\n        uint256 externalNullifierHash,\n        uint256[8] calldata proof\n    ) external view;\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"interfaces/IworldID.sol": {
				"IWorldID": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "root",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "groupId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "signalHash",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "nullifierHash",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "externalNullifierHash",
									"type": "uint256"
								},
								{
									"internalType": "uint256[8]",
									"name": "proof",
									"type": "uint256[8]"
								}
							],
							"name": "verifyProof",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"verifyProof(uint256,uint256,uint256,uint256,uint256,uint256[8])": {
								"details": "Note that a double-signaling check is not included here, and should be carried by the caller.",
								"params": {
									"externalNullifierHash": "A keccak256 hash of the external nullifier",
									"groupId": "The id of the Semaphore group",
									"nullifierHash": "The nullifier hash",
									"proof": "The zero-knowledge proof",
									"root": "The of the Merkle tree",
									"signalHash": "A keccak256 hash of the Semaphore signal"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"verifyProof(uint256,uint256,uint256,uint256,uint256,uint256[8])": "3bc778e3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"root\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"groupId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"signalHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nullifierHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"externalNullifierHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256[8]\",\"name\":\"proof\",\"type\":\"uint256[8]\"}],\"name\":\"verifyProof\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"verifyProof(uint256,uint256,uint256,uint256,uint256,uint256[8])\":{\"details\":\"Note that a double-signaling check is not included here, and should be carried by the caller.\",\"params\":{\"externalNullifierHash\":\"A keccak256 hash of the external nullifier\",\"groupId\":\"The id of the Semaphore group\",\"nullifierHash\":\"The nullifier hash\",\"proof\":\"The zero-knowledge proof\",\"root\":\"The of the Merkle tree\",\"signalHash\":\"A keccak256 hash of the Semaphore signal\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"verifyProof(uint256,uint256,uint256,uint256,uint256,uint256[8])\":{\"notice\":\"Reverts if the zero-knowledge proof is invalid.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IworldID.sol\":\"IWorldID\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IworldID.sol\":{\"keccak256\":\"0xcdf085f9dde0e090068213435aed0c1cf055ff29cc68d41085184c5085ec8079\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52161cbb1bd089e0d95f176319d3ed18afdb0c0741a25ffb72600ea0b754a5ea\",\"dweb:/ipfs/QmaAVrX7ihyeMT8pcKLrH3JU8bTdw736pkkckUdyFCuVuf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"verifyProof(uint256,uint256,uint256,uint256,uint256,uint256[8])": {
								"notice": "Reverts if the zero-knowledge proof is invalid."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"interfaces/IworldID.sol": {
				"ast": {
					"absolutePath": "interfaces/IworldID.sol",
					"exportedSymbols": {
						"IWorldID": [
							20
						]
					},
					"id": 21,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "31:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IWorldID",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 20,
							"linearizedBaseContracts": [
								20
							],
							"name": "IWorldID",
							"nameLocation": "67:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "82:504:0",
										"text": "@notice Reverts if the zero-knowledge proof is invalid.\n @param root The of the Merkle tree\n @param groupId The id of the Semaphore group\n @param signalHash A keccak256 hash of the Semaphore signal\n @param nullifierHash The nullifier hash\n @param externalNullifierHash A keccak256 hash of the external nullifier\n @param proof The zero-knowledge proof\n @dev  Note that a double-signaling check is not included here, and should be carried by the caller."
									},
									"functionSelector": "3bc778e3",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "verifyProof",
									"nameLocation": "600:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "root",
												"nameLocation": "629:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "621:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "groupId",
												"nameLocation": "651:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "643:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "643:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "signalHash",
												"nameLocation": "676:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "668:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "nullifierHash",
												"nameLocation": "704:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "696:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "externalNullifierHash",
												"nameLocation": "735:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "727:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "727:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "proof",
												"nameLocation": "786:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "766:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$8_calldata_ptr",
													"typeString": "uint256[8]"
												},
												"typeName": {
													"baseType": {
														"id": 13,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "766:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 15,
													"length": {
														"hexValue": "38",
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "774:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8_by_1",
															"typeString": "int_const 8"
														},
														"value": "8"
													},
													"nodeType": "ArrayTypeName",
													"src": "766:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$8_storage_ptr",
														"typeString": "uint256[8]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "611:186:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "811:0:0"
									},
									"scope": 20,
									"src": "591:221:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 21,
							"src": "57:757:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "31:783:0"
				},
				"id": 0
			}
		}
	}
}